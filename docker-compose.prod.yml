version: '3.8'

services:
  # Backend service (Go API)
  backend:
    image: ${BACKEND_IMAGE:-ghcr.io/cemalocak/todo-app-backend:latest}
    container_name: todo-backend-prod
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DB_PATH=/data/todos.db
      - PORT=8080
      - ENV=production
    volumes:
      - todo_data_prod:/data
    networks:
      - todo-network-prod
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/todos"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend service (React + Nginx)
  frontend:
    image: ${FRONTEND_IMAGE:-ghcr.io/cemalocak/todo-app-frontend:latest}
    container_name: todo-frontend-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - todo-network-prod
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Monitoring service (optional)
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower-prod
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300 --cleanup
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

# Named volumes for data persistence
volumes:
  todo_data_prod:
    driver: local

# Network for service communication
networks:
  todo-network-prod:
    driver: bridge 